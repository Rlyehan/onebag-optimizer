:root {
  font-family: "JetBrains Mono", monospace;
  color-scheme: dark light;
  --clr-accent: hsl(212, 100%, 50%);
  --clr-warning: hsl(0, 60%, 50%);
  --clr-complementary: hsl(32, 100%, 50%);
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

a {
  text-decoration: none;
  color: inherit;
  opacity: 0.5;

  &:hover {
    opacity: 1;
    transition: all 300ms ease-in-out;
    color: var(--clr-accent);
  }
}

html {  
  scroll-behavior: smooth;
}

body {
  margin-block-start: 2rem;
  margin-inline: 2.5dvw;
  display: grid;
  gap: 3rem;
}

h2 {
  text-align: center;
}

form {
  display: grid;
  gap: 0.25rem;
  grid-template-columns: 1fr 1fr;
  max-width: 95dvw;
  font-family: "JetBrains Mono", monospace;
}

#listNameForm,
#listSelectorForm {
  grid-template-columns: 1fr 15ch;
}

#itemName,
#itemCategory,
#itemSubcategory,
input[value="+"] {
  grid-column: span 2;
}

input,
select {
  font-size: 1.25rem;
  padding: 0.75rem;
  border: 2px solid grey;
  font-family: "JetBrains Mono", monospace;
  -webkit-appearance: none;
  transition: all 300ms ease-in-out;
}

input:focus,
select:focus {
  outline: 2px solid var(--clr-accent);
}

input[type="submit"],
input[type="button"],
button {
  color: white;
  padding: 0.5rem 0.75rem;
  font-size: 1rem;
  border: 2px solid grey;
  background-color: var(--clr-accent);
  font-family: "JetBrains Mono", monospace;
}

input#deleteListButton {
  background-color: var(--clr-warning);

  &:hover {
    border: 2px solid var(--clr-complementary);
  }
  &:focus {
    border: 2px solid var(--clr-complementary);
  }
}

input[type="submit"],
input[type="button"],
button,
select {
  &:hover {
    cursor: pointer;
    border: 2px solid var(--clr-accent);
  }
}

button {
  -webkit-appearance: none;
  appearance: none;
}

.highlight {
  animation: pulseOutline 2000ms forwards;
  animation-iteration-count: 3;
}

@keyframes pulseOutline {
  0% {
    box-shadow: 0 0 0px 0px var(--clr-accent);
  }
  50% {
    box-shadow: 0 0 10px 6px var(--clr-accent);
  }
  100% {
    box-shadow: 0 0 0px 0px var(--clr-accent);
  }
}

.listSelector {
  display: grid;
  grid-template-columns: repeat(1, 1fr);
}

.listSelector input[type="text"],
.listSelector select {
  width: 100%;
}

input[type="checkbox"] {
  visibility: hidden;
}

label:has(input[type="checkbox"]) {
  display: flex;
  max-width: max-content;
}

label:has(input[type="checkbox"]:checked) {
  color: var(--clr-accent);
}

label:has(#carryOnList:not(:checked)) + .itemList.bagCarryOn {
  display: none;
}

label:has(#personalItemList:not(:checked)) + .itemList.bagPersonalItem {
  display: none;
}

label:has(input[type="checkbox"]):hover {
  cursor: pointer;
}

label + .itemList {
  margin-top: -3rem;
}

.filters {
  display: flex;
  flex-wrap: wrap;
  padding: 0.5rem;
  gap: 1rem;
  margin-block: 1rem;
}

.filters input {
  visibility: hidden;
  margin: 0;
  padding: 0;
  height: 0;
  width: 0;
}

.filters label:hover {
  cursor: pointer;
  font-weight: bold;
  text-decoration: underline;
}

.filters label:has(input:checked) {
  color: var(--clr-accent);
}

.filters:has(:not(:checked)) ~ .listItem {
  display: grid;
}

.filters:has(:checked) ~ .listItem {
  display: none;
}

.filters:has(#bags:checked) ~ article.carryOn.bags,
.filters:has(#clothing:checked) ~ article.carryOn.clothing,
.filters:has(#footwear:checked) ~ article.carryOn.footwear,
.filters:has(#grooming:checked) ~ article.carryOn.grooming,
.filters:has(#electronics:checked) ~ article.carryOn.electronics,
.filters:has(#hygiene:checked) ~ article.carryOn.hygiene,
.filters:has(#meds:checked) ~ article.carryOn.meds,
.filters:has(#consumables:checked) ~ article.carryOn.consumables,
.filters:has(#necessities:checked) ~ article.carryOn.necessities,
.filters:has(#other:checked) ~ article.carryOn.other,
.filters:has(#bags2:checked) ~ article.personalItem.bags,
.filters:has(#clothing2:checked) ~ article.personalItem.clothing,
.filters:has(#footwear2:checked) ~ article.personalItem.footwear,
.filters:has(#grooming2:checked) ~ article.personalItem.grooming,
.filters:has(#electronics2:checked) ~ article.personalItem.electronics,
.filters:has(#hygiene2:checked) ~ article.personalItem.hygiene,
.filters:has(#meds2:checked) ~ article.personalItem.meds,
.filters:has(#consumables2:checked) ~ article.personalItem.consumables,
.filters:has(#necessities2:checked) ~ article.personalItem.necessities,
.filters:has(#other2:checked) ~ article.personalItem.other {
  display: grid;
}

.itemList {
  display: grid;
}

.itemListHeader {
  display: none;
}

.itemListEmpty {
  display: grid;
  padding-block: 0.5rem;
  border-bottom: 1px solid grey;
  font-style: italic;
}

.itemList:has(.listItem) .itemListEmpty {
  display: none;
}

.analysisResult {
  gap: 2rem;
}

.analysisResult .listItem {
  grid-template-columns: 8ch 3ch 1fr;
}

.analysisResult .itemAmount,
.analysisResult .itemWeight,
.analysisResult .itemName {
  grid-column: span 1;
  text-align: start;
}

.analysisResult .categoryData {
  grid-template-columns: 8ch 8ch 1fr;
}

.listItem,
.itemListSummary {
  display: grid;
  /* grid-template-rows: repeat(5, auto); */
  grid-template-columns: 3ch 7ch 14ch 1fr;
  position: relative;
  max-width: 95dvw;
  padding-block: 0.5rem;
  column-gap: 1rem;
  border-bottom: 1px solid grey;
}

.listItem .deleteItem {
  position: absolute;
  right: 1rem;
  top: 2.5rem;
  padding: 0.25rem;
  color: red;
  cursor: pointer;
}

.itemName {
  grid-column: span 4;
}

.itemAmount,
.itemWeight,
.itemTotalWeight {
  grid-column: span 1;
}

.itemCategory,
.itemSubcategory {
  grid-column: span 2;
}

.itemAmount,
.itemWeight,
.itemTotalWeight,
.itemPriority,
.itemCategory,
.itemSubcategory {
  font-size: 0.8rem;
  color: lightgray;
}

/* .itemCategory,
.itemSubcategory,
.itemPriority,
.itemBagType,
.itemWeight,
.itemAmount {
  grid-column: span 3;
}

.itemName,
.itemPriority,
.itemTotalWeight {
  grid-column: span 6;
} */

/* .itemAmount,
.itemCategory {
  text-align: end;
} */
/* 
.itemWeight,
.itemSubcategory,
.itemBagType {
  text-align: start;
} */

.itemListSummary .totalWeight,
.itemListSummary .itemName {
  grid-column: span 6;
  font-size: larger;
  color: var(--clr-accent);
}

footer {
  padding-block: 5rem;
  text-align: center;
}

footer p {
  padding-block-start: 1rem;
}


@media (min-width: 64rem) {
  form {
    grid-template-columns: repeat(6, 1fr);
    max-width: 95dvw;
  }

  .listSelector {
    gap: 3rem;
  }

  .listSelector input[type="text"],
  .listSelector select {
    width: auto;
  }

  #listNameForm,
  #listSelectorForm {
    grid-template-columns: 1fr 15ch;
  }

  input,
  select {
    padding-inline: 0.75rem 0;
  }

  #itemName {
    grid-column: span 6;
  }

  #itemCategory,
  #itemSubcategory {
    grid-column: span 1;
  }

  input[value="+"] {
    grid-column: span 6;
  }

  .listSelector {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
  }
  #itemSelectorForm {
    justify-self: end;
  }

  .itemListHeader {
    display: grid;
    border-bottom: 2px solid grey;

    & div {
      font-size: 0.75rem;
    }

    & .itemAmount,
    .itemWeight,
    .itemTotalWeight {
      text-align: end;
    }
  }

  .listItem,
  .itemListHeader,
  .itemListEmpty,
  .itemListSummary {
    grid-template-columns: 1fr 6ch 8ch 8ch 3ch 15ch 1fr;
    grid-template-rows: 1fr;
    grid-template-areas: "itemName itemAmount itemWeight itemTotalWeight itemCategory itemSubcategory itemPriority";
    gap: 1rem;
    text-align: start;
    transition: background-color 100ms ease-in-out;

    & > * {
      grid-column: span 1;
    }
  }
  .listItem:hover {
    background-color: #333;
  }

  .listItem .deleteItem {
    top: 50%;
    right: 0.5rem;
    transform: translate(0, -50%);
    opacity: 0;
    border: none;
    padding: 0;
  }
  .listItem:hover .deleteItem {
    opacity: 1;
  }

  .itemAmount,
  .itemWeight,
  .itemTotalWeight,
  .itemPriority,
  .itemCategory,
  .itemSubcategory {
    font-size: inherit;
    color: inherit;
  }

  .analysisResult {
    grid-template-columns: repeat(3, 1fr);
  }

  .analysisResult h2 {
    grid-column: span 3;
  }

  .analysisResult .listItem {
    grid-template-columns: 8ch 3ch 1fr;
  }

  .analysisResult .categoryData {
    grid-template-columns: 8ch 9ch 1fr;
  }

  .analysisResult .itemAmount,
  .analysisResult .itemWeight {
    grid-column: span 1;
    text-align: end;
  }

  .listItem .itemAmount,
  .listItem .itemWeight,
  .listItem .itemTotalWeight {
    text-align: end;
  }

  .listItem .itemPriority {
    text-align: center;
  }

  .itemAmount,
  .itemName {
    grid-column: span 1;
  }

  .itemListSummary .totalWeight,
  .itemListSummary .itemName {
    grid-column: span 1;
  }

  .itemListSummary .totalWeight {
    grid-column: itemTotalWeight;
    text-align: end;
  }

  .mobileOnlyInfo {
    display: none;
  }
}

.weightDistribution {
  display: grid;
  grid-template-columns: 33fr 15fr 40fr 5fr 2fr 5fr;
  width: 100%;
  transition: all 300ms;

  & .categoryBox {
    transition: all 300ms;
    width: 100%;
  }
}