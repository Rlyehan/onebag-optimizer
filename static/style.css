:root {
  font-family: "JetBrains Mono", monospace;
  color-scheme: dark light;
  --clr-accent: hsl(212, 100%, 50%);
  --clr-warning: hsl(0, 60%, 50%);
  --clr-complementary: hsl(32, 100%, 50%);
  --clr-prio-1: hsl(0, 60%, 50%);
  --clr-prio-2: hsl(44, 96%, 36%);
  --clr-prio-3: hsl(0, 0%, 55%);

  --clr-category-1: oklch(var(--lightness) var(--chroma) 0);
  --clr-category-2: oklch(var(--lightness) var(--chroma) 65);
  --clr-category-3: oklch(var(--lightness) var(--chroma) 130);
  --clr-category-4: oklch(var(--lightness) var(--chroma) 195);
  --clr-category-5: oklch(var(--lightness) var(--chroma) 260);
  --clr-category-6: oklch(var(--lightness) var(--chroma) 325);
  --clr-category-7: oklch(var(--lightness) var(--chroma) 390);
  --clr-category-8: oklch(var(--lightness) var(--chroma) 455);
  --clr-category-9: oklch(var(--lightness) var(--chroma) 520);
  --clr-category-10: oklch(var(--lightness) var(--chroma) 585);
  --clr-category-11: oklch(var(--lightness) var(--chroma) 650);
  --clr-category-12: oklch(var(--lightness) var(--chroma) 715);
  --clr-category-13: oklch(var(--lightness) var(--chroma) 780);
  --clr-category-14: oklch(var(--lightness) var(--chroma) 845);
  --clr-category-15: oklch(var(--lightness) var(--chroma) 910);
}

@media (prefers-color-scheme: dark) {
  :root {
    --lightness: 47.5%;
    --chroma: 0.175;
    --clr-hover-border: white;
    --clr-hover-background: #333;
    --clr-text-fainted: #bbb;
  }
}

@media (prefers-color-scheme: light) {
  :root {
    --lightness: 65%;
    --chroma: 0.24;
    --clr-hover-border: black;
    --clr-hover-background: #ddd;
    --clr-text-fainted: #666;
  }
}

/* 
  Hide filters, empty list text and show/hide buttons
  for browsers without support for :has(), as they would
  not be functional. 
*/
@supports not selector(:has(+ *)) {
  label span,
  .filters,
  .itemListEmpty {
    display: none !important;
  }
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

a {
  text-decoration: none;
  color: inherit;
  opacity: 0.5;
}

a:is(:hover, :focus) {
  opacity: 1;
  transition: all 300ms ease-in-out;
  color: var(--clr-accent);
}

html {
  scroll-behavior: smooth;
}

body {
  margin-block-start: 2rem;
  margin-inline: 2.5dvw;
  display: flex;
  flex-direction: column;
  gap: 3rem;
}

h1 {
  text-align: center;
  margin-block-start: 2rem;
}

form {
  display: grid;
  gap: 0.25rem;
  grid-template-columns: 1fr 1fr;
  font-family: "JetBrains Mono", monospace;
}

#listNameForm,
#listSelectorForm {
  grid-template-columns: 1fr 15ch;
}

.backup {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 0.25rem;
}

.backup button,
.backup input {
  height: 100%;
}

#itemName,
#itemCategory,
#itemSubcategory,
input[value="+"] {
  grid-column: span 2;
}

input,
select {
  font-size: 1.25rem;
  padding: 0.75rem;
  border: 2px solid grey;
  font-family: "JetBrains Mono", monospace;
  transition: all 300ms ease-in-out;
}

input[type="submit"],
input[type="button"] {
  color: white;
  padding: 0.5rem 0.75rem;
  font-size: 1rem;
  border: 2px solid grey;
  background-color: var(--clr-accent);
  font-family: "JetBrains Mono", monospace;
}

:is(input, select):is(:hover, :focus) {
  border: 2px solid var(--clr-hover-border);
}

input#deleteListButton {
  background-color: var(--clr-warning);
}

input#deleteListButton:is(:hover, :focus) {
  border: 2px solid var(--clr-complementary);
}

input::placeholder {
  font-style: italic;
}

button {
  -webkit-appearance: none;
  appearance: none;
}

.highlight {
  animation: pulseOutline 2000ms forwards;
  animation-iteration-count: 1;
}

@keyframes pulseOutline {
  0% {
    box-shadow: 0 0 0px 0px var(--clr-accent);
  }
  50% {
    box-shadow: 0 0 10px 6px var(--clr-accent);
  }
  100% {
    box-shadow: 0 0 0px 0px var(--clr-accent);
  }
}

.listSelector {
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  gap: 0.5rem;
}

.listSelector input[type="text"],
.listSelector select {
  width: 100%;
}

input[type="checkbox"] {
  visibility: hidden;
}

label:has(:is(#carryOnList, #personalItemList)) {
  display: flex;
  align-items: end;
  gap: 1rem;
  max-width: fit-content;
}

label:has(:is(#carryOnList, #personalItemList)) span {
  text-decoration: underline;
  color: inherit;
  opacity: 0.5;
}

label:has(:is(#carryOnList, #personalItemList)):hover span {
  opacity: 1;
  transition: all 300ms ease-in-out;
  color: var(--clr-accent);
}

label:has(#carryOnList:not(:checked)) + .itemList.bagCarryOn,
label:has(#carryOnList:not(:checked)) span:last-of-type {
  display: none;
}

label:has(#carryOnList:checked) span:first-of-type {
  display: none;
}

label:has(#personalItemList:not(:checked)) + .itemList.bagPersonalItem,
label:has(#personalItemList:not(:checked)) span:last-of-type {
  display: none;
}

label:has(#personalItemList:checked) span:first-of-type {
  display: none;
}

label:has(input[type="checkbox"]):hover {
  cursor: pointer;
}

label + .itemList {
  margin-top: -3rem;
}

.filters {
  display: flex;
  flex-wrap: wrap;
  padding: 0.5rem;
  row-gap: 1rem;
  column-gap: 2.25rem;
  margin-block: 1rem;
}

.filters input {
  visibility: hidden;
  margin: 0;
  padding: 0;
  height: 0;
  width: 0;
}

.filters label:hover {
  cursor: pointer;
  font-weight: bold;
  text-decoration: underline;
}

.filters label:has(input:checked) {
  color: var(--clr-accent);
}

.filters:has(:not(:checked)) ~ .listItem {
  display: grid;
}

.filters:has(:checked) ~ .listItem {
  display: none;
}

.filters:has(#bags:checked) ~ article.carryOn.bags,
.filters:has(#clothing:checked) ~ article.carryOn.clothing,
.filters:has(#consumables:checked) ~ article.carryOn.consumables,
.filters:has(#electronics:checked) ~ article.carryOn.electronics,
.filters:has(#footwear:checked) ~ article.carryOn.footwear,
.filters:has(#grooming:checked) ~ article.carryOn.grooming,
.filters:has(#hygiene:checked) ~ article.carryOn.hygiene,
.filters:has(#meds:checked) ~ article.carryOn.meds,
.filters:has(#necessities:checked) ~ article.carryOn.necessities,
.filters:has(#toiletries:checked) ~ article.carryOn.toiletries,
.filters:has(#other:checked) ~ article.carryOn.other,
.filters:has(#bags2:checked) ~ article.personalItem.bags,
.filters:has(#clothing2:checked) ~ article.personalItem.clothing,
.filters:has(#consumables2:checked) ~ article.personalItem.consumables,
.filters:has(#electronics2:checked) ~ article.personalItem.electronics,
.filters:has(#footwear2:checked) ~ article.personalItem.footwear,
.filters:has(#grooming2:checked) ~ article.personalItem.grooming,
.filters:has(#hygiene2:checked) ~ article.personalItem.hygiene,
.filters:has(#meds2:checked) ~ article.personalItem.meds,
.filters:has(#necessities2:checked) ~ article.personalItem.necessities,
.filters:has(#toiletries2:checked) ~ article.personalItem.toiletries,
.filters:has(#other2:checked) ~ article.personalItem.other {
  display: grid;
}

.itemList.bagCarryOn:not(:has(article.bags)) [for="bags"],
.itemList.bagCarryOn:not(:has(article.clothing)) [for="clothing"],
.itemList.bagCarryOn:not(:has(article.consumables)) [for="consumables"],
.itemList.bagCarryOn:not(:has(article.electronics)) [for="electronics"],
.itemList.bagCarryOn:not(:has(article.footwear)) [for="footwear"],
.itemList.bagCarryOn:not(:has(article.grooming)) [for="grooming"],
.itemList.bagCarryOn:not(:has(article.hygiene)) [for="hygiene"],
.itemList.bagCarryOn:not(:has(article.meds)) [for="meds"],
.itemList.bagCarryOn:not(:has(article.necessities)) [for="necessities"],
.itemList.bagCarryOn:not(:has(article.toiletries)) [for="toiletries"],
.itemList.bagCarryOn:not(:has(article.other)) [for="other"],
.itemList.bagPersonalItem:not(:has(article.bags)) [for="bags2"],
.itemList.bagPersonalItem:not(:has(article.clothing)) [for="clothing2"],
.itemList.bagPersonalItem:not(:has(article.consumables)) [for="consumables2"],
.itemList.bagPersonalItem:not(:has(article.electronics)) [for="electronics2"],
.itemList.bagPersonalItem:not(:has(article.footwear)) [for="footwear2"],
.itemList.bagPersonalItem:not(:has(article.grooming)) [for="grooming2"],
.itemList.bagPersonalItem:not(:has(article.hygiene)) [for="hygiene2"],
.itemList.bagPersonalItem:not(:has(article.meds)) [for="meds2"],
.itemList.bagPersonalItem:not(:has(article.necessities)) [for="necessities2"],
.itemList.bagPersonalItem:not(:has(article.toiletries)) [for="toiletries2"],
.itemList.bagPersonalItem:not(:has(article.other)) [for="other2"] {
  display: none;
}

.itemList {
  display: grid;
}

.itemListHeader {
  display: none;
}

.itemListEmpty {
  display: grid;
  padding-block: 0.5rem;
  border-bottom: 1px solid grey;
  font-style: italic;
}

.itemList:has(.listItem) .itemListEmpty {
  display: none;
}

.itemList:not(:has(.listItem)) .itemListSummary .totalWeight {
  display: none;
}

.itemList:not(:has(.listItem)) .weightDistribution {
  opacity: 0;
  height: 0;
  width: 0;
}

.analysisResult {
  gap: 2rem;
}

.analysisResult .listItem {
  grid-template-columns: 8ch 3ch 1fr;
}

.analysisResult .itemAmount,
.analysisResult .itemWeight,
.analysisResult .itemName {
  grid-column: span 1;
  text-align: start;
}

.analysisResult .categoryData {
  grid-template-columns: 8ch 8ch 1fr;
}

.listItem,
.itemListSummary {
  display: grid;
  grid-template-columns: 3ch 7ch 14ch 1fr;
  position: relative;
  max-width: 95dvw;
  padding-block: 0.5rem;
  column-gap: 1rem;
  border-bottom: 1px solid grey;
}

.listItem .deleteItem {
  position: absolute;
  right: 1rem;
  top: 2.5rem;
  padding: 0.25rem;
  color: red;
  cursor: pointer;
}

.listItem:hover {
  background-color: var(--clr-hover-background);
}

.itemName {
  grid-column: span 4;
}

.itemAmount,
.itemWeight,
.itemTotalWeight {
  grid-column: span 1;
}

.itemCategory,
.itemSubcategory {
  grid-column: span 2;
}

.itemAmount,
.itemWeight,
.itemTotalWeight,
.itemPriority,
.itemCategory,
.itemSubcategory {
  font-size: 0.8rem;
  color: var(--clr-text-fainted);
}

.itemListSummary .totalWeight,
.itemListSummary .itemName {
  grid-column: span 6;
  font-size: larger;
  color: var(--clr-accent);
}

.itemPriority.prio-1 {
  color: var(--clr-prio-1);
}

.itemPriority.prio-2 {
  color: var(--clr-prio-2);
}

.itemPriority.prio-3 {
  color: var(--clr-prio-3);
}

footer {
  padding-block: 5rem;
  text-align: center;
}

footer p {
  padding-block-start: 1rem;
}

@media (min-width: 64rem) {
  body {
    max-width: 100rem;
    margin-inline: auto;
  }
  form {
    grid-template-columns: repeat(6, 1fr);
  }

  body > label,
  section {
    margin-inline: 2.5rem;
  }

  .listSelector {
    gap: 1rem;
  }

  #listNameForm,
  #listSelectorForm {
    grid-template-columns: 1fr 15ch;
  }

  input,
  select {
    padding-inline: 0.75rem 0;
  }

  #itemName {
    grid-column: span 4;
  }

  input[value="+"] {
    grid-column: span 6;
  }

  .listSelector {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
  }
  #itemSelectorForm {
    justify-self: end;
  }

  .itemListHeader {
    display: grid;
    border-bottom: 2px solid grey;
    padding-block-end: 0.5rem;

    & div {
      font-size: 0.8rem;
    }

    & .itemAmount,
    .itemWeight,
    .itemTotalWeight {
      text-align: end;
    }
  }

  .listItem,
  .itemListHeader,
  .itemListEmpty,
  .itemListSummary {
    grid-template-columns: 1fr 6ch 8ch 8ch 3ch 15ch 1fr;
    grid-template-rows: 1fr;
    grid-template-areas: "itemName itemAmount itemWeight itemTotalWeight itemPriority itemCategory itemSubcategory";
    gap: 1rem;
    text-align: start;
    /* transition: background-color 250ms ease-in-out; */

    & > * {
      grid-column: span 1;
    }
  }

  .listItem .deleteItem {
    top: 50%;
    right: 0.5rem;
    transform: translate(0, -50%);
    opacity: 0;
    border: none;
    padding: 0;
  }
  .listItem:hover .deleteItem {
    opacity: 1;
  }

  .itemAmount,
  .itemWeight,
  .itemTotalWeight,
  .itemPriority,
  .itemCategory,
  .itemSubcategory {
    font-size: inherit;
    color: inherit;
  }

  .analysisResult {
    grid-template-columns: repeat(3, 1fr);
  }

  .analysisResult h2 {
    grid-column: span 3;
  }

  .analysisResult .listItem {
    grid-template-columns: 8ch 3ch 1fr;
  }

  .analysisResult .categoryData {
    grid-template-columns: 8ch 9ch 1fr;
  }

  .analysisResult .itemAmount,
  .analysisResult .itemWeight {
    grid-column: span 1;
    text-align: end;
  }

  .listItem .itemAmount,
  .listItem .itemWeight,
  .listItem .itemTotalWeight {
    text-align: end;
  }

  .listItem .itemPriority {
    text-align: center;
  }

  .itemAmount,
  .itemName {
    grid-column: span 1;
  }

  .itemListSummary .totalWeight {
    grid-column: span 3;
  }
  .itemListSummary .itemName {
    grid-column: span 1;
  }

  .itemListSummary .totalWeight {
    text-align: end;
  }

  .mobileOnlyInfo {
    display: none;
  }
}

.weightDistribution {
  display: grid;
  grid-template-columns: repeat(10, 0fr);
  width: 100%;
  height: 3rem;
  transition: all 500ms cubic-bezier(0.9, 0, 0.5, 1);
  margin-block: 0rem 1rem;
}

.categoryBox {
  margin-block: auto;
  height: 2rem;
  position: relative;
  cursor: pointer;
}

.weightDistribution:hover .categoryBox:not(:hover) {
  filter: brightness(0.7);
}

.chartItemTitle {
  visibility: hidden;
  position: absolute;
  right: 0.5rem;
  bottom: 3.25rem;
  transform: translate(0, 100%);
}

.categoryBox:hover .chartItemTitle {
  visibility: visible;
}

.filters label {
  position: relative;
  transform: translateY(-0.25rem);
}

.filters label::before {
  content: "";
  position: absolute;
  left: -1.5rem;
  top: 50%;
  transform: translateY(-50%);
  height: 1rem;
  width: 1rem;
}

.filters {
  padding-inline-start: 2.25rem;
}

.categoryBox:nth-child(1),
.filters label:nth-child(2)::before {
  background-color: var(--clr-category-1);
}
.categoryBox:nth-child(2),
.filters label:nth-child(3)::before {
  background-color: var(--clr-category-2);
}
.categoryBox:nth-child(3),
.filters label:nth-child(4)::before {
  background-color: var(--clr-category-3);
}
.categoryBox:nth-child(4),
.filters label:nth-child(5)::before {
  background-color: var(--clr-category-4);
}
.categoryBox:nth-child(5),
.filters label:nth-child(6)::before {
  background-color: var(--clr-category-5);
}
.categoryBox:nth-child(6),
.filters label:nth-child(7)::before {
  background-color: var(--clr-category-6);
}
.categoryBox:nth-child(7),
.filters label:nth-child(8)::before {
  background-color: var(--clr-category-7);
}
.categoryBox:nth-child(8),
.filters label:nth-child(9)::before {
  background-color: var(--clr-category-8);
}
.categoryBox:nth-child(9),
.filters label:nth-child(10)::before {
  background-color: var(--clr-category-9);
}
.categoryBox:nth-child(10),
.filters label:nth-child(11)::before {
  background-color: var(--clr-category-10);
}
.categoryBox:nth-child(11),
.filters label:nth-child(12)::before {
  background-color: var(--clr-category-11);
}
.categoryBox:nth-child(12),
.filters label:nth-child(13)::before {
  background-color: var(--clr-category-12);
}
.categoryBox:nth-child(13),
.filters label:nth-child(14)::before {
  background-color: var(--clr-category-13);
}
.categoryBox:nth-child(14),
.filters label:nth-child(15)::before {
  background-color: var(--clr-category-14);
}
.categoryBox:nth-child(15),
.filters label:nth-child(16)::before {
  background-color: var(--clr-category-15);
}

section:has(.categoryBox.bags:hover) article.bags {
  background-color: var(--clr-category-1);
}
section:has(.categoryBox.clothing:hover) article.clothing {
  background-color: var(--clr-category-2);
}
section:has(.categoryBox.consumables:hover) article.consumables {
  background-color: var(--clr-category-3);
}
section:has(.categoryBox.electronics:hover) article.electronics {
  background-color: var(--clr-category-4);
}
section:has(.categoryBox.footwear:hover) article.footwear {
  background-color: var(--clr-category-5);
}
section:has(.categoryBox.grooming:hover) article.grooming {
  background-color: var(--clr-category-6);
}
section:has(.categoryBox.hygiene:hover) article.hygiene {
  background-color: var(--clr-category-7);
}
section:has(.categoryBox.meds:hover) article.meds {
  background-color: var(--clr-category-8);
}
section:has(.categoryBox.necessities:hover) article.necessities {
  background-color: var(--clr-category-9);
}
section:has(.categoryBox.toiletries:hover) article.toiletries {
  background-color: var(--clr-category-10);
}
section:has(.categoryBox.other:hover) article.other {
  background-color: var(--clr-category-11);
}
